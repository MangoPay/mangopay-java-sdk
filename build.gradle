buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'com.bmuschko:gradle-nexus-plugin:2.3.1'
        classpath 'io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.5.3'
    }
}

plugins {
    id "java"
    id "maven"
    id "maven-publish"
}

repositories {
    mavenCentral()
}

dependencies {
    compile 'org.slf4j:slf4j-api:1.7.7'
    compile 'com.google.code.gson:gson:2.2.4'
    compile 'commons-codec:commons-codec:1.8'

    testCompile 'junit:junit:4.12'
    testCompile 'org.slf4j:slf4j-simple:1.7.7'
}

test {
    exclude 'com/mangopay/core/BankingAliasApiImplTest.class'
    systemProperty "https.protocols", "TLSv1.2,TLSv1.1,TLSv1"
    testLogging {
        events "failed"
        exceptionFormat "full"
        showStackTraces true
    }
}

apply from: 'gradle/publish.gradle'

group = 'com.mangopay'
version = '2.0.0'
sourceCompatibility = '1.7'

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            artifact sourcesJar
        }
    }
}

tasks.withType(Javadoc) {
    options.addStringOption('encoding', 'UTF-8')
    options.addStringOption('charSet', 'UTF-8')
}

task updatePropertiesFile {
    doLast {
        logger.quiet('Update Mangopay Properties File')
        def propertyFile = file "src/main/resources/com/mangopay/core/mangopay.properties"
        def props = new Properties()
        propertyFile.withReader { props.load(it) }
        props.setProperty("version", (String) version)
        propertyFile.withWriter { props.store(it, null) }
    }
}


processResources.dependsOn updatePropertiesFile

